پیاده سازی پروژه :----------------------------------------------------------------------------------
1- create assets folder and  define assets to pubspec

2- define fonts to pubspec

3- data.dart -> provide fake data

4- clear auto generate codes : MyHomePage & MyHomePageState from main

SafeArea--------------------------------------------------------------------------------------------
چون فلاتر مالتی پلتفرم است استاتوس بار اندروید را به صورت پیش فرض به رسمیت نمیشناسد
برای ios هم ناچ هست که باید هندل شود...
اگر Scaffold ی که استفاده میکنیم اپ بار داشته باشد مشکل خود به خود حل میشه
ولی در صورت تعریف نکردن اپ بار بالای صفحه از پشت استاتوس بار یا پشت ناچ شروع میشه
برای حل این مشکل یک ویجت خیلی کاربردی به اسم safeArea داریم
این ویجت با توجه به اینکه تو اندروید هستیم یا آیفون سایز استاتوس بار یا ناچ را محاسبه میکند و لحاظ میکند

ListView--------------------------------------------------------------------------------------------
ListView = recyclerView
یک named constructor دارد به اسم builder که برای بازیافت شدن ویوها به شکل مناسبی باید ازش استفاده کنیم
بعد براش تعریف میکنیم که چند تا آیتم داریم و آیتم های ما از کجا داره میاد

** itemBuilder :
این builder یک پارامتری میگیره از جنس فانکشن
پارامتر اول این فانکشن context است
پارامتر دوم index آن آیتمی است که قرار است نمایش بدیم
نهایتا چیزی که return میکند یک ویجت است که ui آیتم های لیست ماست
این بلاک به ازای تمام آیتم های لیست یک بار اجرا میشه

** itemCount :
تعداد آیتم ها

** scrollDirection :
جهت لیست ویو به صورت پیش فرض vertical است که اگه افقی میخوایم حتما باید ذکر کنیم

اگه ارتفاع مشخصی به این لیست ویو ندیم با ارور زیر رو به رو میشیم
Vertical viewport was given unbounded height.

برای رفع ارور بالا میایم کل لیست ویو را داخل یک container یا sizedBox میذاریم
فرقشون اینه به container علاوه بر سایز میشه استایل هم داد

یک راه دیگر برای رو به رو شندن با ارور ارتفاع لیست
 /* باید ارتفاع پست ها مشخص باشد که بدونه چقدر میتونه ادامه بده لیست را */
            itemExtent:141 ,
/* برای لیست های طولانی و تو درتو این را true نکنید چون پرفورمنس بد میشه */
/* توی فلاتر width height برای تکست ویو باید کاملا مشخص باشه */
            shrinkWrap: true,
ارتفاع هر آیتم لیست را بهش میدیم و shrinkWrap هم چک میکند چند تا آیتم دارد این را ضربدر تعداد میکند و ارتفاع لیست را به دست میاورد


Nested Scrolling :
مدیریت اسکرول های تو در تو
 physics: ClampingScrollPhysics(),

match parent----------------------------------------------------------------------------------------
برای match parent کردن یک ویو میایم داخل SizedBox قرارش میدیم و خط کد زیر را مینویسیم
 width: MediaQuery.of(context).size.width,
 در فاکشن build همیشه به context دسترسی داریم
 و سایز هم یعنی سایز کل صفحه
 میتونیم انتخاب کنیم width یا height

gradiant--------------------------------------------------------------------------------------------
یک container بسازید
بهش decoration بدید
از attr gradiant استفاده کنید که یک لیست رنگ میگیرد و یک جهت شروع

Stack-----------------------------------------------------------------------------------------------
برای رو هم چیدن آیتم ها
تعدادی children میگیرد و به ترتیبی که بنویسیم روی هم قرار می گیرند

Positioned------------------------------------------------------------------------------------------
این ویجت داخل استک قرار میگیره
و شبیه constraint layout چهار تا جهت داره که میتونیم بگیم فاصله ش از هر کدوم از این جهتا چقدره

 Positioned.fill
 یعنی کل فضای container را بگیر

Slider----------------------------------------------------------------------------------------------
همون طور که مشاهده میکنید کتگوری ها به شکل یک انیمیشنی وارد صفحه میشن
 که باعث میشه اصطلاحی که براشون به کار برده میشه تغییر کنه
 لیست نیستن و اسلایدر محسوب میشن

انواع مختلف اسلایدر در ریپازیتوری زیر
https://github.com/serenader2014/flutter_carousel_slider
download zip -> lib folder ->
 تمام فایل هایی که اونجا هستن را کپی کنید و در پروژه خودتون پیست کنید در دایرکتوری زیر
 lib / carousel
 دو تا ایمپورت داره که نمیشناسه تو فیلا پاک کنید
 و اگه چیزی را لازم است ایمپورت کنید

CarouselSlider.builder این هم یک بیلدر دارد
    ** itemCount
    سایز لیست را میگیرد
    ** itemBuilder
     یک فانکشن میگیرد یا ۳ تا ورودی
     context
     index
     realIndex برای وقتی که infinite loop فعال است
     داخل این فانکشن آیتمی که row اون اسلایدر است را برمیگردانیم
     ** options
     تنظیمات مربوط به اسلایدر

ما به این علت این کتابخانه را به صورت dependeny اضافه نکردیم که میخواستیم یک تغییراتی توی سورسش ایجاد کنیم
carousel_slider.dart -> search PageView
PageView == View Pager
padEnds : true , false
اگر attr بالا را false کنید padding اضافه و پیش فرضش را از بین میبرد

carousel_slider.dart -> search getCenterWrapper
حالت دیفالت آیتمی که انتخاب شده بزرگتر میشه ولی کوچیکترا وسط بزرگه هستن
ما میخوایم کوچیکا بچسبن به بالا
alignment: Alignment.topCenter,
خط کد بالا را اضافه میکنیم
و توی آپشن ها
 enlargeStrategy: CenterPageEnlargeStrategy.height
 استراتژی scale کردن آیتم ها را بر اساس ارتفاع قرار میدیم
 disableCenter: true,
 این هم باید true باشد

Image-----------------------------------------------------------------------------------------------
fit == scale type

Container-------------------------------------------------------------------------------------------
** decoration : افکت های پشت
** foregroundDecoration : افکت های روی آیتم

cardView shadow-------------------------------------------------------------------------------------
برای ایجاد سایه حالت کارد ویو از یک stack استفاده میکنیم
بعد داخلش یک  Positioned.fill میندازیم
فرزندش یک container میشود که decoration آن سایه دارد
با margin محل سایه را اصلاح میکنیم
رنگ و میزان نامریی بودن سایه هم دستمونه

TextButton------------------------------------------------------------------------------------------
تکستی که متد onTap دارد و افکت کلیک

Center----------------------------------------------------------------------------------------------
دقیقا از بالا و پایین و چپ و راست وسط پرنتش قرار میگیره
و یک   alignment: Alignment.topCenter, میگیرد که تعیین میکند تک فرزندش فرزندش کجاش قرار بگیره

Flutter_gen-------------------------------------------------------------------کتابخانه مدیریت assets
https://pub.dev/packages/flutter_gen
دیگه نیازی نیست از آدرس عکس به صورت هارد کد برای دسترسی به asset های پروژه استفاده کنیم
این لایبرری در واقع یک code generator است
 که میاد یک سری کلاس هایی را میسازه که از طریق getter هاشون میتونیم به فایل ها دستری داشته باشیم
مشابه کاری که توی اندروید انجام میدیم

add lib -> terminal -> dart pub global activate flutter_gen

قدم به قدم با راهنمای خودش پیش برید
نکته ای که وجود دراه باید از قبل asset هاتون رو توی pubspec تعریف کرده باشید
نکته جالب دیگه اینکه فونت ها رو هم تشخیص میده

بعد برید توی main تایپ کنید Assets و لابرری را ایمپورت کنید

دیگه نیازی نیست عکس ها را به روش زیر برگردونیم
 Image.asset(
   /*این خط کد با خط پایینیش دقیقا معادل هم هستن */
   Assets.img.icons.notification.path,
   // 'assets/img/icons/notification.png',
   width: 24,
   height: 24,
 ),

 خط کد زیر دقیقا یک ویجت Image برمیگردونه
Assets.img.icons.notification.image()

با اجرای کامندهایی که زدیم یک دایرکتوری gen در فولدر lib درست شده که
کلاس های generate شده توسط این لابرری داخلش هستن

 هر وقت تغییری توی فایل هاتون دادید کامندشو بزنید دوباره کلاس هاش آپدیت میشن

برای فونت ها و نگهداری رنگ ها به صورت xml هم به کار میاد این لایبرری

برای استفاده از فونت ها به جای اینکه نام فونت در pubspec را استفاده کنیم از
FontFamily.fontName
استفاده میکنیم

برای استفاده از آیکون های svg هم چیزایی را که گفته توی pubspec اضافه میکنیم
flutter_gen:
  integrations:
    flutter_svg: true

همچنین باید پکیج flutter svg را هم نصب کنیم
https://pub.dev/packages/flutter_svg/install

بعد کامند زیر را بزنیم بعد از هر بار تغییر برای generate شدن چیزهای جدید
flutter packages pub run build_runner build

نحوه استفاده
 Assets.img.icons.logo.svg(width: 24 , height : 24 )