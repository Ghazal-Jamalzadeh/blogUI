پیاده سازی پروژه :----------------------------------------------------------------------------------
1- create assets folder and  define assets to pubspec

2- define fonts to pubspec

3- data.dart -> provide fake data

4- clear auto generate codes : MyHomePage & MyHomePageState from main



Flutter_gen-------------------------------------------------------------------کتابخانه مدیریت assets
دیگه نیازی نیست از آدرس عکس به صورت هارد کد برای دسترسی به asset های پروژه استفاده کنیم
این لایبرری در واقع یک code generator است
 که میاد یک سری کلاس هایی را میسازه که از طریق getter هاشون میتونیم به فایل ها دسترسی داشته باشیم
مشابه کاری که توی اندروید انجام میدیم

add lib -> terminal -> dart pub global activate flutter_gen

قدم به قدم با راهنمای خودش پیش برید
نکته ای که وجود دراه باید از قبل asset هاتون رو توی pubspec تعریف کرده باشید
نکته جالب دیگه اینکه فونت ها رو هم تشخیص میده

بعد برید توی main تایپ کنید Assets و لابرری را ایمپورت کنید

دیگه نیازی نیست عکس ها را به روش زیر برگردونیم
 Image.asset(
   /*این خط کد با خط پایینیش دقیقا معادل هم هستن */
   Assets.img.icons.notification.path,
   // 'assets/img/icons/notification.png',
   width: 24,
   height: 24,
 ),

 خط کد زیر دقیقا یک ویجت Image برمیگردونه
Assets.img.icons.notification.image()

با اجرای کامندهایی که زدیم یک دایرکتوری gen در فولدر lib درست شده که
کلاس های generate شده توسط این لابرری داخلش هستن

 هر وقت تغییری توی فایل هاتون دادید کامندشو بزنید دوباره کلاس هاش آپدیت میشن

برای فونت ها و نگهداری رنگ ها به صورت xml هم به کار میاد این لایبرری

برای استفاده از فونت ها به جای اینکه نام فونت در pubspec را استفاده کنیم از
FontFamily.fontName
استفاده میکنیم

برای استفاده از آیکون های svg هم چیزایی را که گفته توی pubspec اضافه میکنیم
flutter_gen:
  integrations:
    flutter_svg: true

همچنین باید پکیج flutter svg را هم نصب کنیم
https://pub.dev/packages/flutter_svg/install

بعد کامند زیر را بزنیم بعد از هر بار تغییر برای generate شدن چیزهای جدید
flutter packages pub run build_runner build

نحوه استفاده
 As sets.img.icons.logo.svg(width: 24 , height : 24 )

Intent----------------------------------------------------------------------------------------------
1- stateful
برای استفاده از اینتنت + تایمر ابتدا تبدیل به stateful کنید
2- override initState
3- Future.delay
یک کلاسی داریم به نام Future که یک متدی دارد به اسم delay که به وسیله اون میتونیم تاخیر ایجاد کنیم
بعد در متد then مینویسیم که بعد این زمان که طی شد قرار است چه اتفاقی رخ دهد
4- intent
برای جا به جا شدن  بین صفحات از Navigator استفاده میکنیم
برای ایجاد INSTANCE از این  navigator از مند of استفاده میکنیم
بعد در متد push که به معنی هل دادن است مسیرشو براش مشخص میکنیم
از کلاس MaterialPageRoute برای مسیریابی استفاده میکنیم
یک فانکشن به اسم builder بهش پاس میدیم که یک متدی دارد که ورودی آن یک context است
بعد صفحه ای که قرار است نمایش داده شود را داخل این متد بهش میدیم
که باید return شود داخل این متد

MaterialPageRoute vs CupertinoPageRoute
نحوه navigate شدن بین صفحات در گوشی های اندرویدی و آیفون متفاوت است ودر آیفون اسلاید میشه

push vs pushReplacement
اگر از push استفاده کنیم دوباره به صفحه قبلی برمیگردیم
اگر میخواهیم برنگردیم باید از pushReplacement استفاده کنیم

onBoarding------------------------------------------------------------------------------------------
صفحه ای است که یک سری اطلاعات کلی در مورد اپلیکیشن به کاربر میده
برای معرفی فیچرها و امکانات اصلی اپ
