Widgets :

  Center--------------------------------------------------------------------------------------------
  * اولین ویجتی که باش اشنا میشیم center هست
  * ما instance کلاس را میسازیم و return میکنیم
  * همونطور که از اسم این ویجت مشخص است هر فرزندی رو که بهش بدیم اون رو وسط خودش قرار میده
  * داخل center باید فرزندشو مشخص کنیم
  * این کار را با attr child انجام میدیم

  Scaffold------------------------------------------------------------------------------------------
  * در حالت center که اپ را ران کنیم تم اپ را نمیشناسد
  * علتش اینه که صفحات شما طبق توصیه فلاتر بهتره ریشه شون ویجتی باشه به اسم Scaffold که یک ساختار متریال دیزاینی دارد
  Material Design = Android
  Human Interface = IOS

  * Body
  * ویجت Scaffold به جای child یک body دارد

  * بعد از قرار دادن اسکافلد تغییرات تم روی اپ ست می شود

  * AppBar:
  یکی از attr های اسکافلد است

  ** title:
  استرینگ نمیگیره. یک ویجت میگیره
  چرا؟ چون فلاتر از مفهومی به اسم کامپوزیشن استفاده میکنه
  و میتونی بیای بگی یک اپ بار دارم که child  یک ویجت دیگر است
  از ترکیب ویجت هاست یک اپلیکیشن ایجاد میشود
  مثلا به اپ بار ویجت Text را پاس میدیم

  ** actions:
  برای تعریف دکمه ها
  لیستی از ویجت ها میگیره


  Grid System---------------------------------------------------------------------------------------
  در همه فریم ورک های فرانت اند برای پیاده سازی رابط کاربری از مفهوم گرید سیستم استفاده میکنن
  فلاتر هم از همین سیستم استفاده میکند
  میگه کل ویجت هایی که قراره روی صفحه قرار بگیرن یا یک سری row هستن یا یک سری column هستن

  Icon----------------------------------------------------------------------------------------------
  برای تعریف آیکون ها از این ویجت استفاده میکنیم
  پارامتری که از ما میگیره آیکون دیتا است
  Icons = دسترسی به آیکون های متریال دیزاینی اندروید
  CupertinoIcons = دسترسی به آیکون های ios

  SizedBox------------------------------------------------------------------------------------------
  ایجاد فاصله بین ویجت ها - یک جعبه ای که فضای خالی ایجاد میکند
  واحدی که میگیره dp هست و در اسکرین های مختلف یکسانه
  همچینن به جای استفاده از این ویجت میتونیم از wrap with padding استفاده کنیم

  نکته
  ویوهایی مثل elevatedButton حالت عادی wrap content هستند
  اگه بخوایم match parent شه میندازیمش داخل یک Sized Box که attr زیر را دارد
      width: double.infinity,

  Padding-------------------------------------------------------------------------------------------
  EdgeInsets.all = چهار طرف
  EdgeInsets.fromLTRB = left top right bottom
  EdgeInsets.only =  فقط طرفی که میگیم

  Column & Row--------------------------------------------------------------------------------------
  children

  Image---------------------------------------------------------------------------------------------
  برای نمایش عکس ها
  named constructors :
  network: برای نمایش عکس از اینترنت
  file: خواندن از فایل
  assets: خواندن از پوشه assets

  ساخت پوشه assets
  project root -> RClick -> new Directory -> assets
  assets folder -> RClick -> new Directory -> images  -> copy and paste your images

  نمایش عکس ها در اپ:
  pubspec.yaml -> خط کد زیر را پیدا کنید و کامنت هاشو پاک کنید
  یعنی # ها رو از پست سه خط آخر برمیدارید
    # To add assets to your application, add an assets section, like this:
    # assets:
    #   - images/a_dot_burr.jpeg
    #   - images/a_dot_ham.jpeg

    کل تنظیمات مربوط به dependency های پروژه شما داخل این فایل انجام میشود
    دقت کنید indent ها یا فواصل مربوط به خط ها را درست بذارید

    *width & height

    ClipRRect---------------------------------------------------------------------------------------
    Clip Round rectangle
    از این ویجت میتونیم برای برش ویجت ها استفاده کنیم

     *  BorderRadius.all = در تمام جهات
     *  BorderRadius.circular = شبیه آل هست اینم
     فرقشون اینه یه سری radious داریم که حالت خط مستقیم دارند و گرد نیستند


     ویجت clipRect هم وجود دارد

     اضافه کردن فونت به پروژه-----------------------------------------------------------------------
     از پکیج گوگل فونت برای دسترسی به ۹۷۷ فونت استاندارد موجود میشه استفاده کزد
     pub.dev/packages/google_fonts
     or
     google -> google fonts flutter

     برای اضافه کردن این فونت ها به پروژه
     add dependency to pubspec.yaml file or run with command

     روش اول:
     کد زیر را در ترمینال وارد کنید
     flutter pub add google_fonts
     و صبر کنید که دانلود کند. خودش فایل pubspec را تغییر میدهد
     کد زیر اضافه میشود بهش
     google_fonts: ^3.0.1

     روش دوم:
     خودمون کد را دستی اضافه کنیم
     google_fonts: ^3.0.1

     Expanded---------------------------------------------------------------------------------------
     یعنی بشترین فضایی که میتونی را اشغال کن و wrap_content نباش

     نکته طراحی :
     قسمتی از طرح که برامون مهم تره را میایم سایز ثابت میدیم
     مثلا داخل row یا column
     بعد اون بخشی که قراره مابقی فضای باقی مانده را اشغال کند را داخل expanded میذاریم

     Divider----------------------------------------------------------------------------------------
     ویجت پیش فرض برای کشیدن خط در فلاتر

     Wrap-------------------------------------------------------------------------------------------
     Wrap = GridLayout manager
      برای پیاده سازی لیست اسکیل ها به این صورت است که ما یک row داریم که هر وقت پر میشود می رود خط بعدی
       برای این کار از ویجت wrap استفاده میکنیمم که هم میتواند شبیه row باشد هم شبیه column باشد
       برای آیتم های تکرار شونده استفاده میشود و
       ** direction جهت چینش آیتم ها
       ** spacing فاصله افقی استاندارد بین آیتم ها
       ** runSpacing فاصله بین سطرها
       ** children

       ما تا جای ممکن میخوایم از کد تکراری جلوگیری کنیم
       پس کار درستی نیست که آیتم ها را به صورت کامل هی کپی پیست کنیم و hard code بزنیم
       در این صورت اگر نیاز به تغییر هم داشته باشیم باید یریم ۱۰ جای کد عوضش کنیم
       پس از مفهوم کلاس استفاده میکنیم اینجا

       1- children -> clear all extra children. keep 1 -> RClick on the widget -> refactor ->
       extract as widget (ctrl + alt + w ) -> name it  -> ENTER
       auto generating a class and a stateless widget
       2- define your attributes inside it
       3- add them to constructor


     Container--------------------------------------------------------------------------------------
     شبیه sizedBox است با این تفاوت که میتونید decorate ش کنید
     دستتون برای تغییر شکل و ساختارش باز است
     میتونیم shadow و effect و اینا بدیم بهش
     شبیه یک جعبه مستطیل میمونه که شما میتونید بهش width و height بدید
     یک child میگیرد که همون آیتم تکرار شونده میشود

     ** decoration میتونیم حالت بک گراند یا سایه رو در بیاریم با این
     دور هر view  ی که بخوایم سایه یا بک گراند داشته باشد میندازیمش
     ** child

     TextField--------------------------------------------------------------------------------------
     TextField == EditText

     ** decoration
     *** labelText == hint

     برای کاستومایز کردن ظاهرش تم تعریف کنید

     SingleChildScrollView--------------------------------------------------------------------------
     SingleChildScrollView == ScrollView

     حالت دیفالتش اسکرول متریال دیزاینی است که خیلی خشک است
     اگه بخوایم حالت ios ی اسکرول بخوره از attr زیر استفاده میکنیم
     ** physics: BouncingScrollPhysics(),

     Elevated Button--------------------------------------------------------------------------------
     برای ساختن دکمه
     چند تا attr اجباری دارد
     * onPressed
     وقتی باش کاری نداریم میتونیم فانکشن خالی پاس بدیم بهش
     (){}
     * child
     میتونیم Text یا چیزای دیگه را به عنوان فرزند بدیم بهش. مثلا آیکون و پروگرس بار و ....

     optional attr :
     * style
     ** minimumSize
     ** shape

       نکته
       ویوهایی مثل elevatedButton حالت عادی wrap content هستند
       اگه بخوایم match parent شه میندازیمش داخل یک Sized Box که attr زیر را دارد
           width: double.infinity,
      ارتفاع دکمه را هم از همین جا تعیین میکنیم

      رنگ دیفالت دکمه رنگ پرایمری ماست. میشه با تعریف تم عوض کردش

      Change app theme programmatically-------------------------------------------------------------
      داخل MaterialApp میتونیم یک attr بنویسیم به اسم themeMode که سه تا ثابت دارد
           1- Dark
           2- Light
           3- System -> خود سیستم تعیین میکند
      ولی ما نمیخوایم یه چیز ثابت باشه و میخوایم با کلیک روی دکمه سه نقطه تم اپ را به صورت دستی عوض کنیم

      1-
       اولین کاری که میکنیم دیگه کلاس MyApp ما stateless نخواهد بود پس convert  ش میکنیم به stateful


     Internationalizing Flutter apps----------------------------------------------------------------
     1- flutter document
      https://docs.flutter.dev/development/accessibility-and-localization/internationalization

     2- add dependencies to pubspec file
     flutter_localizations: # Add this line
         sdk: flutter         # Add this line
     به indent ها خیلی دقت کنید

     3- add this import
     باید در فایلی که Material app ما وجود دارد import شه این خط کد
     import 'package:flutter_localizations/flutter_localizations.dart';

     4- localizationsDelegates:
     میایم attr بالا را در Material App اضافه میکنیم
     فعل delegate کردن به معنی محول کردن است
     یعنی وظیفه یک چیزی را محول کردن به یک بخش دیگه
     ما داخل اپمون ویجت های مختلفی را داریم استفاده میکنیم
     این ویجت ها یا متریال هستن یا کوپرتینو


     برای ساپورت کردن همه این ویجت های مختلف باید این سه خط کد زیر اضافه شوند
     localizationsDelegates: [
         GlobalMaterialLocalizations.delegate,
         GlobalWidgetsLocalizations.delegate,
         GlobalCupertinoLocalizations.delegate,
       ],
       به این وسیله به همه ویجت ها مثلا اپ بار میگیم که حواستون به تغییر زبان باشه


       مشخص کنیم اپلیکیشنمون چه زبان هایی را ساپورت میکنه
         supportedLocales: [
           Locale('en', ''), // English, no country code
           Locale('fa', '98'), // Spanish, no country code
         ],
         میتونیم country code بذاریم. مثلا بگیم fa که مال ایران است ۹۸

  5- add this line to pubspec
  intl: ^0.17.0 # Add this line

  6- add this line to pubspec
  generate: true # Add this line

  7- Add a new yaml file to the root directory of the Flutter project called l10n.yaml with the following content:
  داخل روت اصلی پروژه فایل l10n.yaml را بساز و محتوای زیر را بریز توش

  8- In ${FLUTTER_PROJECT}/lib/l10n, add the app_en.arb template file. For example:
  توی این آدرس بالا یک فایل با پسوند arb اضافه میکنیم
  یعنی باید توی lib یک فولدر l10n میسازیم
  فایل app_en.arb را میسازیم
  برای ساپورت arb یک پلاگین میگه نصب کن که میکنیم
  و کدی که گفته را داخل این فایل کپی پیست میکنیم فرمت جیسون داره
  متن هایی که توی پروژه داریم را برای اینکه هم فارسی نگه داریم هم انگلیسی توی این جیسون ها نگه میداریم
  این فایل اول را همه تکست های انگلیسی را توش قرار میدیم
  یک فایل دیگه میسازیم برای نگهداری تکست های فارسی

  9- terminal -> flutter gen-l10n
  عبارت بالا را در ترمینال میزنیم و اگر همه چیز را درست انجام داده باشیم
  در پوشه dart_tool یک دایرکتوری به اسم flutter_gen یعنی generate شده درست میشود
   که برای این جیسون ها فایل دارت با getter & setter برای دسترسی بهتر ساخته
   نتیجه این عبارتی است  generate: true که در pubspec اومدیم true کردیمش

   10 - usage
   برای استفاده از موارد بالا پکیج زیر را در main ایمپورت کنید
   import 'package:flutter_gen/gen_l10n/app_localizations.dart';

   11-
   به جای هارد کد زدن تکست در تکست ویو به روشی که در main عمل شده عمل کنید
   این هم توی delegate ها اضافه شود
   AppLocalizations.delegate ,

   تغییر فونت فارسی اپلیکیشن------------------------------------------------------------------------
   root / assets / fonts
   روت بالا را اگر ندارید بسازید
   هر فونتی با فرمت ttf را که دوست داشتید در این فولدر اضافه کنید

   میریم داخل فایل pubspec یک بخشی را اون پایین برامون نوشته و کامنت کرده مربوط به فونت ها
   زیر example از کامنت خارج میکنیمش

     fonts:
       - family: IranSans
         fonts:
           - asset: assets/fonts/IRANSansMobile(FaNum).ttf
           - asset: assets/fonts/IRANSansMobile(FaNum)_Medium.ttf
              style: italic // اگر فونت ما استایل خاصی دارد مثلا بولد یا ایتالیک است از اینجا مشخص میکنیم
              weight: 700 # یعنی به جای وزن ۷۰۰ از این فونت استفاده کن

   قبلا اومده بودیم گوگل فونتس را اضضافه کرده بودیم
   حالا میخوایم بگیم روی انگلیسی ها فلان فونت را ست کن روی فارسی ها فلان فونت


CupertinoSlidingSegmentedControl--------------------------------------------------------------------
CupertinoSlidingSegmentedControl == tab
    <>
    یک دیتا تایپ از ما میگیرد که یعنی کلیدهای ما از چه جنسی  قرار است باشند. میگیم از نوع enum ی که تعریف کردیم
    ** children :
     حالت مپ باید باشند
    یک کلید میگیرند و یک تکست
    ** onValueChanged :
    به نسبت کلیدی که انتخاب شود باید تصمیم بگیریم چه اتفاقی رخ دهد
    ** groupValue :
    متغیری که کلیدها را توش نگه میداریم بهش میدیم
    مقدار پیش فرض انتخاب شده می شود مقداری که در این متغیر ریختیم
    با عوض شدن مقدار این متغیر تب هم عوض میشود
    ** thumbColor
    تغییر رنگ تب سلکت شده

Expanded--------------------------------------------------------------------------------------------
بیشترین فضایی که میتونه را اشغال میکنه